### LF Task For Sailing Downstream III

<b>Task </b>
"Write a program in OCaml that reads a text file (or from the terminal). For each line of input, extract any contiguous integers into a list. Emit the list. Sum the list. Emit the sum Finally, emit the sum of all of the numbers."
Example input:
```
sq: RV128 only, not RV64 nor RV32
lr (? Figure A.13, part 2)

jalr: broken 2 times
```
Example output :
```
128 + 64 + 32 = 224
13 + 2 = 15
= 0
2 = 2
224 + 15 + 0 + 2 = 241
```

### Solutions

#### Solution 1 --> Brute Force
    This is a similar solution if we were to try and solve it in the imperative way.</br>
    The program loops through the string, and whenever encounters a number, starts another internal loop </br>
    from there and captures all the numbers. Then the processing and the output is just tailored to be as close to the </br>
    sample output as possible

#### Solution 2 --> Optimal Solution
    This method uses the internal String.regexp method to pick out all the numbers into a list. Further processing steps </br>
    are same the above method.



